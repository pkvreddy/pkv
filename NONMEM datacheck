library(shiny)
library(ggplot2)
ui <- fluidPage(
  titlePanel("NONMEM dataset visualization"),
  sidebarLayout(
    sidebarPanel(
      fileInput('file1', 'Choose CSV File',
                accept=c('text/csv','text/comma-separated-values,text/plain', '.csv')),
      
      
      tags$hr(),
      checkboxInput('header', 'Header', TRUE),
      radioButtons('sep', 'Separator',c(Comma=',',Tab='\t'),','),
      selectInput( "TYPE", "Output Type", c("Individual","All Subjects")), uiOutput("DOSE"),uiOutput("VISIT"),
      conditionalPanel(condition = "input.TYPE == 'Individual'",uiOutput("ID"))),
    #tags$hr(),
    mainPanel(
      conditionalPanel(condition= "input.TYPE == 'Individual'", plotOutput("plotind", height=300,click = "plot_click"),h4("Data points"),
                       tableOutput("plot_clickedpoints1")),
      conditionalPanel(condition= "input.TYPE == 'All Subjects'",plotOutput("plotcum", height=300,click = "plot_click"),h4("Data points"),
                       tableOutput("plot_clickedpoints2"))
      ))
    )
server <-function(input, output, session) {
  con<-reactive({
    inFile <- input$file1
    if (is.null(inFile))
      return(NULL)
  read.csv(inFile$datapath)

  }) 
  
  output$ID <- renderUI({
    df <-con()
    if (is.null(df)) return(NULL)
    ID<-unique(df$ID)
    selectInput("ID", "ID:",ID)})
  
  #uiOutput("dose")#
  output$DOSE <- renderUI({
    df <-con()
    if (is.null(df)) return(NULL)
    DOSE<-unique(df$DOSE)
    selectInput("DOSE", "DOSE:",DOSE)})
  
  output$VISIT <- renderUI({
    df <-con()
    if (is.null(df)) return(NULL)
    VISIT<-unique(df$VISIT)
    selectInput("VISIT", "VISIT:",VISIT)})
  #Individual Plots#
    output$plotind <- renderPlot({
      inFile <- input$file1
      if (is.null(inFile)==TRUE) {print(NULL) }
      else if (is.null(inFile)==FALSE) {
        
        data<-read.csv(inFile$datapath)  
  
      data1 <- subset(data ,data$ID == input$ID & data$DOSE==input$DOSE & data$VISIT==input$VISIT )
    p1<-ggplot(data1, aes(x=data1$RTFD,y=data1$DV,color=factor(data1$ID))) + geom_point()+
      ggtitle("Individual Concentration Vs Time (Lin-Lin) ") +
      labs(x="Time in hours (RTFD)",y="Concentartion in ng/L (DV)") 
    p2 <- p1 + geom_point(color="blue") + geom_line() + theme_bw() +
      theme(axis.line = element_line(colour = "black"),
            panel.grid.major = element_blank(),
            panel.grid.minor = element_blank(),
            panel.background = element_blank(),
            legend.position = "none")  
    p2
    }})
    output$plotcum <- renderPlot({
      inFile <- input$file1
      if (is.null(inFile)==TRUE) {print(NULL) }
      else if (is.null(inFile)==FALSE) {
        
        data<-read.csv(inFile$datapath)  
      data1 <- subset(data , data$DOSE==input$DOSE & data$VISIT==input$VISIT )
      p1<-ggplot(data1, aes(x=data1$RTFD,y=data1$DV,color=factor(data1$ID))) + geom_point()+
        ggtitle("All Subjects Concentration Vs Time (Lin-Lin) ") +
        labs(x="Time in hours (RTFD)",y="Concentartion in ng/L (DV)") 
      p2 <- p1 + geom_point(color="blue") + geom_line() + theme_bw() +
        theme(axis.line = element_line(colour = "black"),
              panel.grid.major = element_blank(),
              panel.grid.minor = element_blank(),
              panel.background = element_blank(),
              legend.position = "none") 
      p2
    }})
    con1<-reactive({
   
        
      data<-con()
      data1 <- subset(data ,data$ID == input$ID & data$DOSE==input$DOSE & data$VISIT==input$VISIT )
      data1
    }) 
    con2<-reactive({
      
      data<-con()
      data1 <- subset(data ,  data$DOSE==input$DOSE & data$VISIT==input$VISIT)
      data1
    }) 
    output$plot_clickedpoints1 <- renderTable({
      inFile <- input$file1
      if (is.null(inFile)==TRUE) {print(NULL) }
      else if (is.null(inFile)==FALSE) {
      res <- nearPoints(con1(), input$plot_click, "RTFD","DV", )
      if (nrow(res) == 0)
        return()
      res
    }})
    output$plot_clickedpoints2 <- renderTable({
      inFile <- input$file1
      if (is.null(inFile)==TRUE) {print(NULL) }
      else if (is.null(inFile)==FALSE) {
      res <- nearPoints(con2(), input$plot_click, "RTFD","DV", )
      if (nrow(res) == 0)
        return()
      res
    }})
  }
shinyApp(ui = ui, server = server)
