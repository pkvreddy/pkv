
rm(list=ls())

library(plyr)

#### data set to have following columns with names exactly as listed below. any order is fine 
##### subj, time, conc, dose
##### the current units assumed are -> conc=ng/ml, time=hrs, dose=mg
###### output units ->   AUC=ng*hr/mL, Cmax=ng/mL, CL=L/hr, VD=L, Thalf=hrs, ke=1/hr)



auc1 <- function(df1){
 
myfunc1 <-function(x){
  df0=x
  df0$prevtime <- c(0,df0$time[-length(df0$time)])
  df0$prevconc <- c(0,df0$conc[-length(df0$conc)])
  xr <- which.max(df0$conc)
  xmi <- which.min(df0$conc)
  df0$auc_ref1<- ifelse(df0$time<=df0$time[xr],
                      (df0$time -df0$prevtime)* (df0$conc+df0$prevconc)* 0.5,
                      (df0$time-df0$prevtime)*(df0$prevconc- df0$conc)/(log(df0$prevconc/df0$conc)))
  
  auc_ref<-round(sum(df0$auc_ref1),2)
  df0$AUCt <- auc_ref
  df0$Tmax <- df0$time[xr]
  df0$Cmax <- df0$conc[xr]
  df0$Clast <- df0$conc[nrow(df0)]
  df0$Cmin <- df0$conc[xmi]
  df0$prevtime <- NULL
  df0$prevconc <- NULL
  df0$auc_ref1 <- NULL
  return(df0)
}   
df2= ddply(df1, "subj",myfunc1)

return(df2)
}



myfunc2 <- function(y){
  df3= y[y$conc>0,]
  n_lambda <- 0
  r.adj <- 0
  
  for (i in (nrow(df3)-2):1){
    
    # all
    r <- r.adj - summary(lm(log(conc) ~ time, df3[i:nrow(df3),]))$adj.r.squared
    if (is.nan(r) == TRUE) {
      #NAToUnknown(x = ke, unknown = 0)
      
      cat("Warning: data points used for log-linear regression may include Cmax \n")
      cat("         or may have error in estimation of lambda_z. \n")
    }
    else {
      if (r < (1e-04)) {
        n_lambda <- nrow(df3) - i + 1
        r.adj <- summary(lm(log(conc) ~ time, df3[i:nrow(df3),]))$adj.r.squared
      }
    }
  }
  Lm1 <- lm(log(conc) ~ time, df3[(nrow(df3) -n_lambda + 1):nrow(df3), ])
  df3$ke <- (-coef(Lm1)[2])
  df3$Thalf <- round(log(2)/(-coef(Lm1)[2]),3)
  df3$inter <- (-coef(Lm1)[1])
  df3$R_sq <- summary(Lm1)$r.sq
  df3$AR_sq <- summary(Lm1)$adj.r.squared
  df3$Npoints <- n_lambda
  df3$AUCextra <-df3$Clast/df3$ke
  df3$AUCINF <- df3$AUCt+df3$AUCextra
 df3$CL <- df3$dose*1000/df3$AUCINF
  df3$VD <- df3$CL/df3$ke
  df3 = df3[!duplicated(df3$subj), ]
  
  
return(df3)
}

pk1 = read.table('2subj.csv',skip=0,header=T,sep=',')
head(pk1)
pk1$conc = as.numeric(as.character(pk1$conc))
pk1a=pk1[complete.cases(pk1$conc),]
head(pk1a)
nca1 <- auc1(pk1a)

head(nca1)
nca2 = ddply(nca1,"subj", myfunc2)
head(nca2)

#write.table(nca2,file="nca.csv",sep=',', row.names=F)

